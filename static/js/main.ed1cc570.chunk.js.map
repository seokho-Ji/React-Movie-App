{"version":3,"sources":["components/Navigation/Navigation.js","routes/About.js","components/Movie/Movie.js","routes/Home.js","routes/Detail.js","App.js","index.js"],"names":["LinkBox","styled","div","Navigation","to","About","MoviesMovie","Link","MovieTitle","h3","MovieSummary","p","MoviePoster","img","MovieGenres","ul","MovieGenresGenre","li","MoreText","button","Movie","id","year","title","summary","poster","genres","useState","moreTrue","setMoreTrue","btnText","setBtnText","onMoreText","useCallback","pathname","state","src","alt","map","genre","index","length","slice","onClick","Container","section","Loader","LoaderText","span","Movies","Home","isLoading","setIsLoading","onMovies","setMovies","getMovies","a","axios","get","movies","data","console","error","useEffect","movie","medium_cover_image","Detail","location","history","log","undefined","push","GlobalStyle","createGlobalStyle","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed1cc570.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst LinkBox = styled.div`\n\twidth: 100px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: fixed;\n\talign-items: center;\n\ttop: 50px;\n\tleft: 0;\n\tmargin: 0.6rem;\n\tz-index: 1;\n\tborder-radius: 5px;\n\tbackground-color: white;\n\tbox-shadow: 0 8px 38px rgba(133, 133, 133, 0.3),\n\t\t0 5px 12px rgba(133, 133, 133, 0.22);\n\n\t& a {\n\t\twidth: 100%;\n\t\tcolor: #0066ff;\n\t\tfont-size: 1.4rem;\n\t\tfont-weight: bold;\n\t\ttext-align: center;\n\t\ttext-decoration: none;\n\t\tmargin: 0;\n\t\tpadding: 1rem 2rem 1rem 2rem;\n\t}\n`;\n\nconst Navigation = () => {\n\treturn (\n\t\t<LinkBox>\n\t\t\t<Link to=\"/\">HOME</Link>\n\t\t\t<Link to=\"/about\">ABOUT</Link>\n\t\t</LinkBox>\n\t);\n};\nexport default Navigation;\n","import React from 'react';\n\nconst About = () => {\n\treturn <span>About this page</span>;\n};\nexport default About;\n","import React, { Fragment, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n// em: 자신의 부모요소의 fontSize를 따라감\n// rem: html의 fontSize부터 시작\nconst MoviesMovie = styled(Link)`\n\twidth: 48%;\n\tbackground-color: white;\n\ttext-decoration: none;\n\tmargin-bottom: 7rem;\n\tdisplay: flex;\n\talign-items: flex-start;\n\tjustify-content: space-between;\n\tfont-weight: 300;\n\tpadding: 2em;\n\tcolor: #adaeb9;\n\tbox-shadow: 0 8px 38px rgba(133, 133, 133, 0.3),\n\t\t0 5px 12px rgba(133, 133, 133, 0.22);\n\tborder-radius: 5px;\n\n\t@media screen and (max-width: 1000px) {\n\t\twidth: 100%;\n\t\tflex-direction: column;\n\t}\n\n\t& h3,\n\t& h5 {\n\t\tfont-weight: 300;\n\t\tmargin: 0;\n\t}\n`;\n// 영화 타이틀\nconst MovieTitle = styled.h3`\n\tmargin-bottom: 5px;\n\tfont-size: 2.4em;\n\tcolor: #2c2c2c;\n`;\n// 줄거리\nconst MovieSummary = styled.p`\n\tfont-size: 1.4em;\n`;\n// 포스터\nconst MoviePoster = styled.img`\n\tposition: relative;\n\ttop: -50px;\n\tmax-width: 150px;\n\twidth: 100%;\n\tmargin-right: 3em;\n\tbox-shadow: -10px 19px 38px rgba(83, 83, 83, 0.3),\n\t\t10px 15px 12px rgba(80, 80, 80, 0.22);\n`;\nconst MovieGenres = styled.ul`\n\tdisplay: flex;\n\tlist-style: none;\n\tpadding: 0;\n\tmargin: 5px 0;\n`;\nconst MovieGenresGenre = styled.li`\n\tfont-size: 1.4em;\n`;\nconst MoreText = styled.button`\n\tfont-size: 1rem;\n\tborder: 0;\n\tborder-radius: 5px;\n\tmargin-left: 2px;\n\tcolor: #adaeb9;\n\t&:focus {\n\t\tborder: none;\n\t\toutline: none;\n\t}\n`;\n\nconst Movie = ({ id, year, title, summary, poster, genres }) => {\n\tconst [moreTrue, setMoreTrue] = useState(false);\n\tconst [btnText, setBtnText] = useState('more');\n\n\tconst onMoreText = useCallback(() => {\n\t\tif (moreTrue) {\n\t\t\tsetMoreTrue(false);\n\t\t\tsetBtnText('more');\n\t\t} else {\n\t\t\tsetMoreTrue(true);\n\t\t\tsetBtnText('close');\n\t\t}\n\t}, [moreTrue]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MoviesMovie\n\t\t\t\tto={{\n\t\t\t\t\tpathname: `/movie/${id}`,\n\t\t\t\t\tstate: {\n\t\t\t\t\t\tyear,\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\tsummary,\n\t\t\t\t\t\tposter,\n\t\t\t\t\t\tgenres,\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<MoviePoster src={poster} alt={title} alt={title} />\n\t\t\t\t<div>\n\t\t\t\t\t<MovieTitle>{title}</MovieTitle>\n\t\t\t\t\t<h5>{year}</h5>\n\t\t\t\t\t<MovieGenres>\n\t\t\t\t\t\t{genres.map((genre, index) => (\n\t\t\t\t\t\t\t<MovieGenresGenre key={index}>\n\t\t\t\t\t\t\t\t{genres.length !== index + 1\n\t\t\t\t\t\t\t\t\t? genre + ','\n\t\t\t\t\t\t\t\t\t: genre}\n\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t</MovieGenresGenre>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</MovieGenres>\n\t\t\t\t\t<MovieSummary>\n\t\t\t\t\t\t{moreTrue ? summary : summary.slice(0, 200) + '...'}\n\t\t\t\t\t\t{summary.length >= 200 && (\n\t\t\t\t\t\t\t<MoreText onClick={onMoreText}>{btnText}</MoreText>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</MovieSummary>\n\t\t\t\t</div>\n\t\t\t</MoviesMovie>\n\t\t</Fragment>\n\t);\n};\n\nMovie.propTypes = {\n\tyear: PropTypes.number.isRequired,\n\ttitle: PropTypes.string.isRequired,\n\tsummary: PropTypes.string.isRequired,\n\tposter: PropTypes.string.isRequired,\n\tgenres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import axios from 'axios';\nimport React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport Movie from '../components/Movie/index';\nimport styled from 'styled-components';\n\nconst Home = () => {\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst [onMovies, setMovies] = useState([]);\n\n\tconst getMovies = useCallback(async () => {\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: {\n\t\t\t\t\tdata: { movies },\n\t\t\t\t},\n\t\t\t} = await axios.get(\n\t\t\t\t'https://yts.mx/api/v2/list_movies.json/sort_by=rating',\n\t\t\t);\n\t\t\tsetMovies(movies);\n\t\t\tsetIsLoading(false);\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tgetMovies();\n\t}, []);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Container>\n\t\t\t\t{isLoading ? (\n\t\t\t\t\t<Loader>\n\t\t\t\t\t\t<LoaderText>Loading...</LoaderText>\n\t\t\t\t\t</Loader>\n\t\t\t\t) : (\n\t\t\t\t\t<Movies>\n\t\t\t\t\t\t{onMovies &&\n\t\t\t\t\t\t\tonMovies.map((movie) => {\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\tyear,\n\t\t\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\t\t\tsummary,\n\t\t\t\t\t\t\t\t\tmedium_cover_image: poster,\n\t\t\t\t\t\t\t\t\tgenres,\n\t\t\t\t\t\t\t\t} = movie;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Movie\n\t\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\t\tsummary={summary}\n\t\t\t\t\t\t\t\t\t\tposter={poster}\n\t\t\t\t\t\t\t\t\t\tgenres={genres}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t</Movies>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t</Fragment>\n\t);\n};\n\nconst Container = styled.section`\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n`;\nconst Loader = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tfont-weight: 300;\n\tfont-size: 1.6rem;\n`;\nconst LoaderText = styled.span``;\n\nconst Movies = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tflex-wrap: wrap;\n\talign-items: flex-start;\n\tpadding: 5em;\n\tpadding-top: 7em;\n\twidth: 90%;\n\n\t@media screen and (max-width: 400px) {\n\t\tpadding: 70px 0 70px 0;\n\t}\n`;\n\nexport default Home;\n","import React, { Fragment, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst Detail = ({ location, history }) => {\n\tuseEffect(() => {\n\t\tconsole.log(location);\n\t\tconsole.log('실행@@@@@@@@@@@@@');\n\t\tif (location.state == undefined) {\n\t\t\tconsole.log('state undefined error');\n\t\t\thistory.push('/');\n\t\t}\n\t}, []);\n\n\tconst { state } = location;\n\tconsole.log(state);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{state && (\n\t\t\t\t<Container>\n\t\t\t\t\t<MoviesMovie>\n\t\t\t\t\t\t<MoviePoster\n\t\t\t\t\t\t\tsrc={state.poster}\n\t\t\t\t\t\t\talt={state.title}\n\t\t\t\t\t\t\talt={state.title}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<MovieTitle>{state.title}</MovieTitle>\n\t\t\t\t\t\t\t<h5>{state.year}</h5>\n\t\t\t\t\t\t\t<MovieGenres>\n\t\t\t\t\t\t\t\t{state.genres.map((genre, index) => (\n\t\t\t\t\t\t\t\t\t<MovieGenresGenre key={index}>\n\t\t\t\t\t\t\t\t\t\t{state.genres.length !== index + 1\n\t\t\t\t\t\t\t\t\t\t\t? genre + ','\n\t\t\t\t\t\t\t\t\t\t\t: genre}\n\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t</MovieGenresGenre>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</MovieGenres>\n\t\t\t\t\t\t\t<MovieSummary>{state.summary}</MovieSummary>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</MoviesMovie>\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n};\n\nconst Container = styled.section`\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nconst MoviesMovie = styled.div`\n\twidth: 50%;\n\tbackground-color: white;\n\tmargin-bottom: 7rem;\n\tdisplay: flex;\n\talign-items: flex-start;\n\tjustify-content: space-between;\n\tfont-weight: 300;\n\tpadding: 2em;\n\tcolor: #adaeb9;\n\tbox-shadow: 0 8px 38px rgba(133, 133, 133, 0.3),\n\t\t0 5px 12px rgba(133, 133, 133, 0.22);\n\tborder-radius: 5px;\n\n\t@media screen and (max-width: 1000px) {\n\t\twidth: 100%;\n\t\tflex-direction: column;\n\t}\n\n\t& h3,\n\t& h5 {\n\t\tfont-weight: 300;\n\t\tmargin: 0;\n\t}\n`;\n// 영화 타이틀\nconst MovieTitle = styled.h3`\n\tmargin-bottom: 5px;\n\tfont-size: 2.4em;\n\tcolor: #2c2c2c;\n`;\n// 줄거리\nconst MovieSummary = styled.p`\n\tfont-size: 1.4em;\n`;\n// 포스터\nconst MoviePoster = styled.img`\n\tposition: relative;\n\ttop: -50px;\n\tmax-width: 150px;\n\twidth: 100%;\n\tmargin-right: 3em;\n\tbox-shadow: -10px 19px 38px rgba(83, 83, 83, 0.3),\n\t\t10px 15px 12px rgba(80, 80, 80, 0.22);\n`;\nconst MovieGenres = styled.ul`\n\tdisplay: flex;\n\tlist-style: none;\n\tpadding: 0;\n\tmargin: 5px 0;\n`;\nconst MovieGenresGenre = styled.li`\n\tfont-size: 1.4em;\n`;\n\nexport default Detail;\n","import React, { Fragment } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport Navigation from './components/Navigation';\nimport About from './routes/About';\nimport Home from './routes/Home';\nimport Detail from './routes/Detail';\n\nconst App = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<GlobalStyle />\n\t\t\t<HashRouter>\n\t\t\t\t<Navigation />\n\t\t\t\t<Route path=\"/\" exact={true} component={Home} />\n\t\t\t\t<Route path=\"/about\" component={About} />\n\t\t\t\t<Route path=\"/movie/:id\" component={Detail} />\n\t\t\t</HashRouter>\n\t\t</Fragment>\n\t);\n};\n\nexport const GlobalStyle = createGlobalStyle`\n\t*{\n\t\tbox-sizing: border-box;\n\t}\n\thtml {\n\t\tfont-size: 10px;\n\t}\n\tbody {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tfont-family: -apple-system, -apple-system, BlinkMacSystemFont, 'Segoe UI', \n\t\t\t\tRoboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n\t\tbackground-color: #eff3f7;\n\t\tfont-size: 1rem;\n\t}\n\thtml, body {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tdisplay:flex;\n\t\tjustify-content: center;\t\n\t}\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}