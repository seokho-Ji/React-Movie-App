{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["MoviesMovie","styled","div","MovieData","MovieTitle","h3","MovieYear","h5","MovieSummary","p","MoviePoster","img","MovieGenres","ul","MovieGenresGenre","li","MoreText","button","Movie","year","title","summary","poster","genres","useState","moreTrue","setMoreTrue","btnText","setBtnText","onMoreText","useCallback","console","log","slice","src","alt","map","genre","index","length","onClick","GlobalStyle","createGlobalStyle","Container","section","Loader","LoaderText","span","Movies","App","isLoading","setIsLoading","onMovies","setMovies","getMovies","a","axios","get","movies","data","error","useEffect","movie","id","medium_cover_image","ReactDOM","render","document","getElementById"],"mappings":"4zDAOA,IAAMA,EAAcC,IAAOC,IAAV,KA2BXC,EAAYF,IAAOC,IAAV,KAGTE,EAAaH,IAAOI,GAAV,KAOVC,EAAYL,IAAOM,GAAV,KAGTC,EAAeP,IAAOQ,EAAV,KAKZC,EAAcT,IAAOU,IAAV,KAUXC,EAAcX,IAAOY,GAAV,KAOXC,EAAmBb,IAAOc,GAAV,KAGhBC,EAAWf,IAAOgB,OAAV,KAkECC,EAtDD,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAAa,EAC3BC,oBAAS,GADkB,mBACpDC,EADoD,KAC1CC,EAD0C,OAE7BF,mBAAS,QAFoB,mBAEpDG,EAFoD,KAE3CC,EAF2C,KAIrDC,EAAaC,uBAAY,WAC9BC,QAAQC,IAAIP,GACZM,QAAQC,IAAIX,EAAQY,MAAM,EAAG,MAEzBR,GACHC,GAAY,GACZE,EAAW,UAEXF,GAAY,GACZE,EAAW,YAEV,CAACH,IAEJ,OACC,cAAC,WAAD,UACC,eAACzB,EAAD,WACC,cAACU,EAAD,aAAawB,IAAKZ,EAAQa,IAAKf,GAA/B,MAA2CA,IAC3C,eAACjB,EAAD,WACC,cAACC,EAAD,UAAagB,IACb,cAACd,EAAD,UAAYa,IACZ,cAACP,EAAD,UACEW,EAAOa,KAAI,SAACC,EAAOC,GAAR,OACX,eAACxB,EAAD,WACES,EAAOgB,SAAWD,EAAQ,EACxBD,EAAQ,IACRA,EAHJ,SAAuBC,QAQzB,eAAC9B,EAAD,WACEiB,EAAWJ,EAAUA,EAAQY,MAAM,EAAG,KAAO,MAC7CZ,EAAQkB,QAAU,KAClB,cAACvB,EAAD,CAAUwB,QAASX,EAAnB,SAAgCF,gB,ooCCpHvC,IA8Dac,EAAcC,YAAH,KAuBlBC,EAAY1C,IAAO2C,QAAV,KAKTC,EAAS5C,IAAOC,IAAV,KASN4C,EAAa7C,IAAO8C,KAAV,KAEVC,EAAS/C,IAAOC,IAAV,KAUG+C,EA/GH,WAAO,IAAD,EACiBzB,oBAAS,GAD1B,mBACV0B,EADU,KACCC,EADD,OAEa3B,mBAAS,IAFtB,mBAEV4B,EAFU,KAEAC,EAFA,KAIXC,EAAYxB,sBAAW,sBAAC,8BAAAyB,EAAA,+EAMlBC,IAAMC,IACf,yDAP2B,gBAIlBC,EAJkB,EAG3BC,KACCA,KAAQD,OAKVL,EAAUK,GACVP,GAAa,GAVe,gDAY5BpB,QAAQ6B,MAAR,MAZ4B,yDAc3B,IAMH,OAJAC,qBAAU,WACTP,MACE,IAGF,eAAC,WAAD,WACC,cAACb,EAAD,IACA,cAACE,EAAD,UACEO,EACA,cAACL,EAAD,UACC,cAACC,EAAD,2BAGD,cAACE,EAAD,UACEI,GACAA,EAAShB,KAAI,SAAC0B,GAAW,IAEvBC,EAMGD,EANHC,GACA5C,EAKG2C,EALH3C,KACAC,EAIG0C,EAJH1C,MACAC,EAGGyC,EAHHzC,QACoBC,EAEjBwC,EAFHE,mBACAzC,EACGuC,EADHvC,OAED,OACC,cAAC,EAAD,CAECJ,KAAMA,EACNC,MAAOA,EACPC,QAASA,EACTC,OAAQA,EACRC,OAAQA,GALHwC,cC/CfE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.709454e5.chunk.js","sourcesContent":["import React, { Fragment, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n// em: 자신의 부모요소의 fontSize를 따라감\n// rem: html의 fontSize부터 시작\n\nconst MoviesMovie = styled.div`\n\twidth: 48%;\n\tbackground-color: white;\n\tmargin-bottom: 7rem;\n\tdisplay: flex;\n\talign-items: flex-start;\n\tjustify-content: space-between;\n\tfont-weight: 300;\n\tpadding: 2em;\n\tcolor: #adaeb9;\n\tbox-shadow: 0 8px 38px rgba(133, 133, 133, 0.3),\n\t\t0 5px 12px rgba(133, 133, 133, 0.22);\n\tborder-radius: 5px;\n\n\t@media screen and (max-width: 800px) {\n\t\twidth: 100%;\n\t\tflex-direction: column;\n\t}\n\n\t& h3,\n\t& h5 {\n\t\tfont-weight: 300;\n\t\tmargin: 0;\n\t}\n`;\n\n// 영화 정보\nconst MovieData = styled.div``;\n\n// 영화 타이틀\nconst MovieTitle = styled.h3`\n\tmargin-bottom: 5px;\n\tfont-size: 2.4em;\n\tcolor: #2c2c2c;\n`;\n\n// 연도\nconst MovieYear = styled.h5``;\n\n// 줄거리\nconst MovieSummary = styled.p`\n\tfont-size: 1.4em;\n`;\n\n// 포스터\nconst MoviePoster = styled.img`\n\tposition: relative;\n\ttop: -50px;\n\tmax-width: 150px;\n\twidth: 100%;\n\tmargin-right: 3em;\n\tbox-shadow: -10px 19px 38px rgba(83, 83, 83, 0.3),\n\t\t10px 15px 12px rgba(80, 80, 80, 0.22);\n`;\n\nconst MovieGenres = styled.ul`\n\tdisplay: flex;\n\tlist-style: none;\n\tpadding: 0;\n\tmargin: 5px 0;\n`;\n\nconst MovieGenresGenre = styled.li`\n\tfont-size: 1.4em;\n`;\nconst MoreText = styled.button`\n\tfont-size: 1rem;\n\tborder: 0;\n\tborder-radius: 5px;\n\tmargin-left: 2px;\n\tcolor: #adaeb9;\n\t&:focus {\n\t\tborder: none;\n\t\toutline: none;\n\t}\n`;\n\nconst Movie = ({ year, title, summary, poster, genres }) => {\n\tconst [moreTrue, setMoreTrue] = useState(false);\n\tconst [btnText, setBtnText] = useState('more');\n\n\tconst onMoreText = useCallback(() => {\n\t\tconsole.log(moreTrue);\n\t\tconsole.log(summary.slice(0, 120));\n\n\t\tif (moreTrue) {\n\t\t\tsetMoreTrue(false);\n\t\t\tsetBtnText('more');\n\t\t} else {\n\t\t\tsetMoreTrue(true);\n\t\t\tsetBtnText('close');\n\t\t}\n\t}, [moreTrue]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MoviesMovie>\n\t\t\t\t<MoviePoster src={poster} alt={title} alt={title} />\n\t\t\t\t<MovieData>\n\t\t\t\t\t<MovieTitle>{title}</MovieTitle>\n\t\t\t\t\t<MovieYear>{year}</MovieYear>\n\t\t\t\t\t<MovieGenres>\n\t\t\t\t\t\t{genres.map((genre, index) => (\n\t\t\t\t\t\t\t<MovieGenresGenre key={index}>\n\t\t\t\t\t\t\t\t{genres.length !== index + 1\n\t\t\t\t\t\t\t\t\t? genre + ','\n\t\t\t\t\t\t\t\t\t: genre}\n\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t</MovieGenresGenre>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</MovieGenres>\n\t\t\t\t\t<MovieSummary>\n\t\t\t\t\t\t{moreTrue ? summary : summary.slice(0, 140) + '...'}\n\t\t\t\t\t\t{summary.length >= 140 && (\n\t\t\t\t\t\t\t<MoreText onClick={onMoreText}>{btnText}</MoreText>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</MovieSummary>\n\t\t\t\t</MovieData>\n\t\t\t</MoviesMovie>\n\t\t</Fragment>\n\t);\n};\n\nMovie.propTypes = {\n\tyear: PropTypes.number.isRequired,\n\ttitle: PropTypes.string.isRequired,\n\tsummary: PropTypes.string.isRequired,\n\tposter: PropTypes.string.isRequired,\n\tgenres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import axios from 'axios';\nimport React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport Movie from './Movie';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nconst App = () => {\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst [onMovies, setMovies] = useState([]);\n\n\tconst getMovies = useCallback(async () => {\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: {\n\t\t\t\t\tdata: { movies },\n\t\t\t\t},\n\t\t\t} = await axios.get(\n\t\t\t\t'https://yts.mx/api/v2/list_movies.json/sort_by=rating',\n\t\t\t);\n\t\t\tsetMovies(movies);\n\t\t\tsetIsLoading(false);\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tgetMovies();\n\t}, []);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<GlobalStyle></GlobalStyle>\n\t\t\t<Container>\n\t\t\t\t{isLoading ? (\n\t\t\t\t\t<Loader>\n\t\t\t\t\t\t<LoaderText>Loading...</LoaderText>\n\t\t\t\t\t</Loader>\n\t\t\t\t) : (\n\t\t\t\t\t<Movies>\n\t\t\t\t\t\t{onMovies &&\n\t\t\t\t\t\t\tonMovies.map((movie) => {\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\tyear,\n\t\t\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\t\t\tsummary,\n\t\t\t\t\t\t\t\t\tmedium_cover_image: poster,\n\t\t\t\t\t\t\t\t\tgenres,\n\t\t\t\t\t\t\t\t} = movie;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Movie\n\t\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\t\tsummary={summary}\n\t\t\t\t\t\t\t\t\t\tposter={poster}\n\t\t\t\t\t\t\t\t\t\tgenres={genres}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t</Movies>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t</Fragment>\n\t);\n};\n\nexport const GlobalStyle = createGlobalStyle`\n\t*{\n\t\tbox-sizing: border-box;\n\t}\n\thtml {\n\t\tfont-size: 10px;\n\t}\n\tbody {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tfont-family: -apple-system, -apple-system, BlinkMacSystemFont, 'Segoe UI', \n\t\t\t\tRoboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n\t\tbackground-color: #eff3f7;\n\t\tfont-size: 1rem;\n\t}\n\n\thtml, body {\n\t\theight: 100%;\n\t\tdisplay:flex;\n\t\tjustify-content: center;\t\n\t}\n`;\n\nconst Container = styled.section`\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n`;\nconst Loader = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tfont-weight: 300;\n\tfont-size: 1.6rem;\n`;\nconst LoaderText = styled.span``;\n\nconst Movies = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tflex-wrap: wrap;\n\talign-items: flex-start;\n\tpadding: 5em;\n\tpadding-top: 7em;\n\twidth: 80%;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}